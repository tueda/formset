name: Test

on:
  push:
  pull_request:
  schedule:
    - cron: 0 0 1 * * # monthly

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12', '3.13']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Try the script
        run: |
          poetry run python --version
          poetry run python formset/formset.py

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest

  # For old Python versions.
  test-on-container:
    strategy:
      fail-fast: false
      matrix:
        python-version: [2.7, 3.4, 3.5, 3.6, 3.7]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          pipx install poetry
          poetry self add poetry-plugin-export

      - name: Export requirements.txt
        run: poetry export -f requirements.txt -o requirements.txt --without-hashes --with dev

      # We have to manually start a container. Otherwise, GitHub-provided actions
      # don't work properly in older OS containers.
      # See: https://github.com/actions/checkout/issues/1590#issuecomment-2567109195
      - name: Start Docker container
        run: |
          docker pull python:${{ matrix.python-version }}
          docker run --name test-container -d -v ${{ github.workspace }}:/workspace python:${{ matrix.python-version }} tail -f /dev/null

      - name: Try the script
        env:
          SCRIPT: |
            cd /workspace
            python --version
            python formset/formset.py
        run: docker exec test-container bash -c "$SCRIPT"

      - name: Install dependencies
        env:
          SCRIPT: |
            cd /workspace
            pip install -r requirements.txt
        run: docker exec test-container bash -c "$SCRIPT"

      - name: Run tests
        env:
          SCRIPT: |
            cd /workspace
            pytest
        run: docker exec test-container bash -c "$SCRIPT"
